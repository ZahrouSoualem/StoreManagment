/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Home;

import java.awt.CardLayout;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class Ordered extends javax.swing.JPanel  {

    /**
     * Creates new form Ordered
     */
    Statement stt ;
    ResultSet rs,rs2,rs3;
    Connecter cnn = new Connecter();
    private int SlectedRow;
    private int generatedKey ;
    OrderedDetails details = new OrderedDetails(-1);
    CardLayout crd;
    DefaultTableModel ct = new DefaultTableModel();
    
    public Ordered() {
        initComponents();
        crd = (CardLayout)(this.getLayout());
        ct = (DefaultTableModel)(OrderedTable.getModel());
        try{
            stt = cnn.obtenirconnexion().createStatement() ; 
            
            rs = stt.executeQuery(" SELECT * from ordered,provider where ordered.idProvider = provider.idProvider" );
                                  
           
           while(rs.next()){
               //probleme a la date 
                ct.addRow(new Object [] {rs.getInt("idcmd"),rs.getInt("idProvider") , rs.getString("name_prov") ,rs.getDate("date_ord")}) ;
           }
           rs2 = stt.executeQuery("SELECT * FROM provider") ;
           while(rs2.next()){
               String noProvider = rs2.getString("idProvider") ; 
              providercomb.addItem(noProvider) ; 
              
           }
           rs3 = stt.executeQuery("SELECT * FROM product");
           while(rs3.next()){
               String noproduct = rs3.getString("idProduct");
              productcomb.addItem(noproduct);
           }
            
        }catch(Exception e){
             JOptionPane.showMessageDialog(null, "erroo"+e.getLocalizedMessage());
        }
        OrderedTable.setModel(ct);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrderedTable = new javax.swing.JTable();
        providercomb = new javax.swing.JComboBox<>();
        date = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        tsearch = new javax.swing.JTextField();
        idcmd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        productcomb = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        ADDP = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ADD = new javax.swing.JButton();
        DELETE = new javax.swing.JButton();
        edit = new javax.swing.JButton();

        setBackground(new java.awt.Color(247, 250, 250));
        setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(247, 250, 250));

        jPanel2.setBackground(new java.awt.Color(0, 143, 187));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SHOW PRODUCT");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        OrderedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID ORDERED", "ID Provider", "Provider Name", "Date"
            }
        ));
        OrderedTable.getTableHeader().setReorderingAllowed(false);
        OrderedTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrderedTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(OrderedTable);

        providercomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                providercombActionPerformed(evt);
            }
        });

        date.setEnabled(false);

        search.setText("SEARCH");

        idcmd.setEnabled(false);

        jLabel2.setText("id product");

        jLabel3.setText("Quantity");

        ADDP.setText("ADD PRODUCT");
        ADDP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDPActionPerformed(evt);
            }
        });

        jLabel4.setText("id ordered");

        jLabel5.setText("Provider");

        jLabel6.setText("Date(yyyy-MM-dd)");

        ADD.setText("ADD");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });

        DELETE.setText("DELETE");
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });

        edit.setText("EDIT");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(providercomb, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(date)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(ADDP))
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(productcomb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(quantity)
                                .addComponent(idcmd, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(search)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ADD)
                        .addGap(18, 18, 18)
                        .addComponent(edit)
                        .addGap(18, 18, 18)
                        .addComponent(DELETE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(providercomb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idcmd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(9, 9, 9)
                        .addComponent(productcomb, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6)
                        .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ADDP)
                        .addGap(99, 99, 99))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ADD)
                                .addComponent(DELETE)
                                .addComponent(edit)))
                        .addGap(77, 77, 77))))
        );

        jLabel2.setVisible(false);
        productcomb.setVisible(false);
        jLabel3.setVisible(false);
        quantity.setVisible(false);
        ADDP.setVisible(false);

        add(jPanel1, "card2");
        add(details, "card3");
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        
        
        details = new OrderedDetails(this.getid());
        add(details, "card3");

        crd.show(this, "card3");
        
        
    }//GEN-LAST:event_jPanel2MouseClicked

    private void OrderedTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderedTableMouseClicked
        // TODO add your handling code here:
        SlectedRow = OrderedTable.getSelectedRow();
        deplace(SlectedRow);
        date.setEnabled(true);
        Enabled();
    }//GEN-LAST:event_OrderedTableMouseClicked

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        try{
            
        int provider = Integer.parseInt(providercomb.getSelectedItem().toString());
        java.util.Date tdate = new java.util.Date();
        java.sql.Date sqlDate=new java.sql.Date(tdate.getTime());
        
        
        String query = "INSERT INTO `ordered`( `idProvider`, `date_ord`) VALUES ("+provider+",'"+sqlDate+" ')";
        stt.executeUpdate(query);
        
        JOptionPane.showMessageDialog(null, "The ordered has been added Correctlly");
        Enabled();
       //String [] row = new String[] {cin,name,surname,grp};
        //ct.addRow(row);
        refresh();
        }
        catch(Exception  e){
        JOptionPane.showMessageDialog(null, "error "+e.getLocalizedMessage());
        }
                
    }//GEN-LAST:event_ADDActionPerformed

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
         try
        {
        if(JOptionPane.showConfirmDialog(null, "Do you really want to delete that Ordered ?", "DELET", JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION)
        {
        if(idcmd.getText().length() != 0){
        stt.executeUpdate("DELETE FROM details WHERE idcmd ='" + Integer.valueOf(idcmd.getText()) + "'");
        stt.executeUpdate("DELETE FROM ordered WHERE idcmd ='" + Integer.valueOf(idcmd.getText()) + "'");
        refresh();
        
        }else{
            JOptionPane.showMessageDialog(null, "No ID");
        }
        }
        }
        catch(Exception e)
        {
        JOptionPane.showMessageDialog(null, "erroo"+e.getLocalizedMessage());
        }
    }//GEN-LAST:event_DELETEActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
       
        try{
        if(JOptionPane.showConfirmDialog(null, "ARE YOU SURE", "EDIT",JOptionPane.YES_NO_OPTION )== JOptionPane.OK_OPTION ){
       // stt.executeUpdate("UPDATE employee SET name="+tnom.getText().toString()+" ,grp="+tgrp.getText().toString()+", pre="+tpre.getText().toString()+" WHERE idemp="+tcin.getText().toString());
       String query = "UPDATE `ordered` SET `idProvider`=" +providercomb.getSelectedItem().toString()+" ,`date_ord` = '"+Date.valueOf(date.getText())+"' WHERE idcmd = "+Integer.valueOf(idcmd.getText())+"" ;
       stt.executeUpdate(query) ;
        JOptionPane.showMessageDialog(null, "The ordered has been edited Successfully");
        refresh();
        }
        }
        catch(Exception e)
        {
        System.err.print(e);
        JOptionPane.showMessageDialog(null, "erroo"+e.getLocalizedMessage());
        }
    }//GEN-LAST:event_editActionPerformed

    private void ADDPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDPActionPerformed
         try{
            int product = Integer.parseInt(productcomb.getSelectedItem().toString()) ;
            int qte = Integer.parseInt(this.quantity.getText());
            int idc = Integer.parseInt(idcmd.getText());
        
        String query = "INSERT INTO `details`(`idProduct`, `idcmd`, `quantity`) VALUES ("+product+","+idc+","+qte+")";
        stt.executeUpdate(query);
        
        JOptionPane.showMessageDialog(null, "The product has been added Successfully at this ordered");
        
       //String [] row = new String[] {cin,name,surname,grp};
        //ct.addRow(row);
        refresh();
        }
        catch(Exception  e){
        JOptionPane.showMessageDialog(null, "error "+e.getLocalizedMessage());
        }
    }//GEN-LAST:event_ADDPActionPerformed

    private void providercombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_providercombActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_providercombActionPerformed

    public void Enabled(){
        jLabel2.setVisible(true);
        jLabel3.setVisible(true);
        productcomb.setVisible(true);
        quantity.setVisible(true);
        ADDP.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADD;
    private javax.swing.JButton ADDP;
    private javax.swing.JButton DELETE;
    private javax.swing.JTable OrderedTable;
    private javax.swing.JTextField date;
    private javax.swing.JButton edit;
    private javax.swing.JTextField idcmd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> productcomb;
    private javax.swing.JComboBox<String> providercomb;
    private javax.swing.JTextField quantity;
    private javax.swing.JButton search;
    private javax.swing.JTextField tsearch;
    // End of variables declaration//GEN-END:variables

    private void refresh() {
         vider();
        try{
          stt = cnn.obtenirconnexion().createStatement();
            rs = stt.executeQuery(" SELECT * from ordered,provider where ordered.idProvider = provider.idProvider" );
           while(rs.next()){
               //probleme a la date 
                ct.addRow(new Object [] {rs.getInt("idcmd"),rs.getInt("idProvider") , rs.getString("name_prov") ,rs.getDate("date_ord")}) ;
           }
           date.setText("");
           providercomb.setSelectedIndex(0);
        /*idproduct.setText("");
        famillycomb.setSelectedIndex(0);
        price.setText("");
        nomproduct.setText("");
        quantity.setText("");
        tsearch.setText("");*/
        }catch(Exception e){
            System.err.print(e);
        }
        OrderedTable.setModel(ct);
    }

   public void vider(){
            int n = ct.getRowCount();
        for(int i=0;i<n;i++){
            ct.removeRow(0);
        }
     }
    public void deplace(int i){
    try{
    idcmd.setText(ct.getValueAt(i, 0).toString());
    providercomb.setSelectedItem(ct.getValueAt(i, 1).toString()); 
    date.setText(ct.getValueAt(i, 3).toString());
   
    }catch(Exception e){
        JOptionPane.showMessageDialog(null, "erroo"+e.getLocalizedMessage());
    }
}
    public int getid(){ 
        int id =Integer.valueOf(idcmd.getText()) ;
      return id ;
    
}
}


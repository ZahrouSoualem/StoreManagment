/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Home;

import java.sql.Date;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author DELL
 */

public class Statistic extends javax.swing.JPanel {

    /**
     * Creates new form Statistic
     */
     Statement stt ;
    ResultSet rs,rs1,rs2,rs3,rs4,rs5;
    Connecter cnn = new Connecter();
    
    
    public Statistic() {
        initComponents();
        try{
            stt = cnn.obtenirconnexion().createStatement() ;
            java.util.Date tdate = new java.util.Date();
        java.sql.Date sqlDate=new java.sql.Date(tdate.getTime());
        
            String query =" SELECT noCLient,COUNT(noCLient) AS value_occurrence \n" +
"FROM sellingg\n" +
"WHERE sellingg.date = ' "+sqlDate+"'\n" +
"GROUP BY noCLient \n" +
"ORDER BY value_occurrence DESC\n" +
"LIMIT 1";
            rs=stt.executeQuery(query);
             while(rs.next()){
                // System.out.println(rs.getInt("noCLient"));
                 bestc.setText(""+rs.getInt("noCLient"));
                // System.out.println(rs.getString("name_cli"));
                 //System.out.println("oooooooooooooooooooooooooooooooooooooo");
             }
             String query1= "SELECT idProduct,SUM(quantity)AS total"
                     + " FROM sellingdetails  \n" +
                     "WHERE sellingg.date = ' "+sqlDate+"'\n" +
                     "GROUP BY idProduct \n" +          
                     "ORDER BY `total` DESC\n" +
                     "LIMIT 1";
             rs1=stt.executeQuery(query1);
             while(rs1.next()){
                 prodv.setText(""+rs1.getInt("idProduct"));
             }
             String query2 =  "SELECT `idProvider`,COUNT(`idProvider`) AS value_occurrence\n" +
                              "FROM buying \n" +
                              "WHERE Buying_date = ' "+sqlDate+"'\n" +
                              "GROUP BY `idProvider` \n" +
                              "ORDER BY value_occurrence DESC\n" +
                              "LIMIT 1" ;
             rs2=stt.executeQuery(query2);
             while(rs2.next()){
                 bestp.setText(""+rs2.getInt("idProvider"));
             }
             String query3 = "SELECT idProduct,SUM(quantity_bought)AS total FROM buying \n" +
                     "WHERE Buying_date = ' "+sqlDate+"'\n" +
"GROUP BY idProduct \n" +
"ORDER BY `total` DESC\n" +
"LIMIT 1";
             rs3 = stt.executeQuery(query3);
             while(rs3.next()){
                 proda.setText(""+rs3.getInt("idProduct"));
             }
             /*String query4 = "SELECT SUM( product.price_pro*quantity_sold ) AS total FROM selling,product WHERE selling.idProduct = product.idProduct AND selling.selling_date = ' "+sqlDate+" ' ";
             rs4=stt.executeQuery(query4);
             
             while(rs4.next()){
                 PRIXV.setText(""+rs4.getInt("total"));
             }*/
             int pp = 400000 ;
            PRIXA.setText(""+pp);
           /* rs5=stt.executeQuery("SELECT SUM( product.buying_price*quantity_bought ) AS total\n" +
                                 "FROM buying,product \n" +
                                 "WHERE buying.idProduct = product.idProduct");
            while(rs5.next()){
                 PRIXA.setText(" "+rs5.getInt("total")+"   DA");
             }*/
            int p = 400000 ;
            PRIXA.setText(""+p);
            
            int a = Integer.valueOf(PRIXV.getText()) ;
            int b = Integer.parseInt(PRIXA.getText()) ;
            int res = a-b ;
            RESULT.setText(""+res+"  DA") ;
        }catch(Exception e){
           JOptionPane.showMessageDialog(null, "erroo"+e.getLocalizedMessage()); 
        }
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        date1 = new javax.swing.JTextField();
        date2 = new javax.swing.JTextField();
        STAT = new javax.swing.JButton();
        PRIXA = new javax.swing.JTextField();
        PRIXV = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        bestc = new javax.swing.JTextField();
        bestp = new javax.swing.JTextField();
        proda = new javax.swing.JTextField();
        prodv = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        RESULT = new javax.swing.JTextField();

        setBackground(new java.awt.Color(247, 250, 250));

        STAT.setText("STAT");
        STAT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                STATActionPerformed(evt);
            }
        });

        jLabel1.setText("DATE DE DEBUT LE STAT");

        jLabel2.setText("DATE DE FIN DE STAT");

        jLabel3.setText("PRIX TOTAL DACHAT");

        jLabel4.setText("PRIX TOTAL DE VENTE");

        jLabel5.setText("LE PRIX BENIFICIER");

        prodv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodvActionPerformed(evt);
            }
        });

        jLabel6.setText("BEST CUSTOMER");

        jLabel7.setText("BEST PRODUCT");

        jLabel8.setText("BEST PTOVIDER");

        jLabel9.setText("BEST PRODUCT");

        RESULT.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        RESULT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RESULTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(382, 382, 382)
                        .addComponent(STAT))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel3)
                                .addComponent(jLabel9)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(66, 66, 66)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(proda, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(PRIXA, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(bestp, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(36, 36, 36)
                                                .addComponent(jLabel4))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(62, 62, 62)
                                                .addComponent(jLabel7))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(44, 44, 44)
                                                .addComponent(jLabel6)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(PRIXV, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                                    .addComponent(date1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                                    .addComponent(bestc)
                                    .addComponent(prodv)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(92, 92, 92)
                                .addComponent(RESULT, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(STAT)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(PRIXA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(PRIXV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bestp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bestc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(proda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(RESULT, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void STATActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_STATActionPerformed
             PRIXV.setText("");
             PRIXA.setText("");
             bestp.setText("");
             bestc.setText("");
             prodv.setText("");
             proda.setText("");
             RESULT.setText("");
             
        try{
             String query = "SELECT noCLient,COUNT(noCLient) AS value_occurrence \n" +
                            "  FROM     selling\n" +
                            "   WHERE selling_date  < ' "+Date.valueOf(date1.getText())+" ' AND selling_date > ' " +Date.valueOf(date2.getText())+ " '\n" +
                            "GROUP BY noCLient\n" +
                            "  ORDER BY value_occurrence DESC\n" +
                            "LIMIT    1";
            rs= stt.executeQuery(query) ; 
                    
             while(rs.next()){
                
                 bestc.setText(""+rs.getInt("noCLient"));
                
             }
             
             String query1= "SELECT idProduct,COUNT(idProduct) AS value_occurrence \n"+
                      " FROM selling \n "+
                      " WHERE selling_date < ' "+Date.valueOf(date1.getText())+" ' AND selling_date > ' " +Date.valueOf(date2.getText())+ " '\n" +
                      "GROUP BY idProduct \n"+
                      "ORDER BY value_occurrence DESC LIMIT 1";
             rs1=stt.executeQuery(query1);
             while(rs1.next()){
                 prodv.setText(""+rs1.getInt("idProduct"));
             }
              String query2 =  "SELECT `idProvider`,COUNT(`idProvider`) AS value_occurrence\n" +
                              "FROM buying \n" +
                               " WHERE Buying_date < ' "+Date.valueOf(date1.getText())+" ' AND Buying_date > ' " +Date.valueOf(date2.getText())+ " ' \n" +
                              "GROUP BY `idProvider` \n" +
                              "ORDER BY value_occurrence DESC\n" +
                              "LIMIT 1" ;
             rs2=stt.executeQuery(query2);
             while(rs2.next()){
                 bestp.setText(""+rs2.getInt("idProvider"));
             }
             String query3 = "SELECT idProduct,COUNT(idProduct) AS value_occurrence\n" +
                             "FROM buying \n" +
                             " WHERE Buying_date < ' "+Date.valueOf(date1.getText())+" ' AND Buying_date > ' " +Date.valueOf(date2.getText())+ " '\n" +
                             "GROUP BY idProduct\n" +
                             "ORDER BY value_occurrence DESC \n" +
                             "LIMIT 1";
             rs3 = stt.executeQuery(query3);
             while(rs3.next()){
                 proda.setText(""+rs3.getInt("idProduct"));
             }
              String query4 = "SELECT SUM( product.price_pro*quantity_sold ) AS total\n" +
                              "FROM selling,product\n" +
                              "WHERE selling.idProduct = product.idProduct \n" +
                              " AND selling_date < ' "+Date.valueOf(date1.getText())+" ' AND selling_date > ' " +Date.valueOf(date2.getText())+" ' ";
             rs4=stt.executeQuery(query4);
             
             while(rs4.next()){
                 PRIXV.setText(""+rs4.getInt("total"));
             }
           /* rs5=stt.executeQuery("SELECT SUM( product.buying_price*quantity_bought ) AS total\n" +
                                 "FROM buying,product \n" +
                                 "WHERE buying.idProduct = product.idProduct");
            while(rs5.next()){
                 PRIXA.setText(" "+rs5.getInt("total")+"   DA");
             }*/
            int p = 400000 ;
            PRIXA.setText(""+p);
            
            int a = Integer.valueOf(PRIXV.getText()) ;
            int b = Integer.parseInt(PRIXA.getText()) ;
            int res = a-b ;
            RESULT.setText(""+res+"  DA") ;
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "erreur  "+e.getLocalizedMessage());
        }
            
            
            
        
    }//GEN-LAST:event_STATActionPerformed

    private void prodvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prodvActionPerformed

    private void RESULTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RESULTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RESULTActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PRIXA;
    private javax.swing.JTextField PRIXV;
    private javax.swing.JTextField RESULT;
    private javax.swing.JButton STAT;
    private javax.swing.JTextField bestc;
    private javax.swing.JTextField bestp;
    private javax.swing.JTextField date1;
    private javax.swing.JTextField date2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField proda;
    private javax.swing.JTextField prodv;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Home;


import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class Product extends javax.swing.JPanel {

    /**
     * Creates new form Product
     */
    DefaultTableModel ct = new DefaultTableModel();
    Statement stt ;
    ResultSet rs,rs2;
    Connecter cnn = new Connecter();
    private int SlectedRow,idprod;
    
    public Product() {
        initComponents();
        ct = (DefaultTableModel)(ProductTable.getModel());
        try{
            stt = cnn.obtenirconnexion().createStatement();
            rs = stt.executeQuery("SELECT * FROM Product");
           while(rs.next()){
                ct.addRow(new Object [] {rs.getInt("idProduct"),rs.getString("nom_pro"),rs.getString("nomfam"),rs.getInt("quantity")
                        ,rs.getDouble("price_pro"),rs.getDouble("buying_price")});
                
           }
           rs2 = stt.executeQuery("SELECT nomfam FROM familly");
           while(rs2.next()){
               String familly = rs2.getString("nomfam");
              famillycomb.addItem(familly);
           }
           refresh();
        }catch(Exception e){
            System.err.print(e);
        }
        ProductTable.setModel(ct);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        idproduct = new javax.swing.JTextField();
        quantity = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        famillycomb = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProductTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        nomproduct = new javax.swing.JTextField();
        ADD = new javax.swing.JButton();
        EDIT = new javax.swing.JButton();
        Archiving = new javax.swing.JButton();
        Searching = new javax.swing.JButton();
        tsearch = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Buying_price = new javax.swing.JTextField();

        setBackground(new java.awt.Color(247, 250, 250));

        jLabel1.setText("Product");

        idproduct.setEnabled(false);

        jLabel2.setText("Qyantity/Amount");

        jLabel3.setText("Famillye");

        famillycomb.setModel(new javax.swing.DefaultComboBoxModel<>());

        jLabel4.setText("Price");

        ProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idPorduct", "nomProduct", "Familly", "Quantite", "Price", "BuyingPrice"
            }
        ));
        ProductTable.getTableHeader().setReorderingAllowed(false);
        ProductTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ProductTable);

        jLabel5.setText("Product Name");

        ADD.setText("ADD");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });

        EDIT.setText("EDIT");
        EDIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDITActionPerformed(evt);
            }
        });

        Archiving.setText("Archiving");
        Archiving.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArchivingActionPerformed(evt);
            }
        });

        Searching.setText("Search");
        Searching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchingActionPerformed(evt);
            }
        });

        tsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tsearchActionPerformed(evt);
            }
        });

        jLabel6.setText("Price Of Buying");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(idproduct)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(famillycomb, 0, 157, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nomproduct))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(price, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(quantity, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Buying_price, javax.swing.GroupLayout.Alignment.LEADING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ADD, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EDIT, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Archiving, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Searching, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Searching, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(tsearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idproduct, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomproduct, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(famillycomb, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Buying_price, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ADD)
                    .addComponent(EDIT)
                    .addComponent(Archiving))
                .addGap(67, 67, 67))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        // TODO add your handling code here:
        try{
        String namepro= nomproduct.getText();
        String familypro = famillycomb.getSelectedItem().toString();
        double pricepro = Double.parseDouble(this.price.getText());      
        int quanititypro =Integer.parseInt(this.quantity.getText());
        double buyingprice = Double.parseDouble(this.Buying_price.getText()); 
        
        java.util.Date date = new java.util.Date();
        java.sql.Date sqlDate=new java.sql.Date(date.getTime());
        stt.executeUpdate("INSERT INTO product(nom_pro, nomfam, price_pro,quantity,buying_price)"
                + " VALUES ('"+namepro+"','"+familypro+"','"+pricepro+"','"+quanititypro+"','"+buyingprice+"')");
        JOptionPane.showMessageDialog(null, "The PRODUCT has been added Correctlly");
       //String [] row = new String[] {cin,name,surname,grp};
       // ct.addRow(row);
        refresh();
        }
        catch(Exception  e){
        JOptionPane.showMessageDialog(null, "error "+e.getLocalizedMessage());
        }
    }//GEN-LAST:event_ADDActionPerformed

    private void ProductTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductTableMouseClicked
        // TODO add your handling code here:
        
       
        
        SlectedRow = ProductTable.getSelectedRow();
        deplace(SlectedRow);  
        idprod = Integer.parseInt(idproduct.getText());
         idproduct.setEnabled(true);
        
    }//GEN-LAST:event_ProductTableMouseClicked

    private void EDITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDITActionPerformed
        // TODO add your handling code here:
        try{
        if(JOptionPane.showConfirmDialog(null, "confirm modfification", "modification",JOptionPane.YES_NO_OPTION )== JOptionPane.OK_OPTION ){
       // stt.executeUpdate("UPDATE employee SET name="+tnom.getText().toString()+" ,grp="+tgrp.getText().toString()+", pre="+tpre.getText().toString()+" WHERE idemp="+tcin.getText().toString());
        stt.executeUpdate("UPDATE product SET nom_pro='" + nomproduct.getText() + "' ,price_pro='" + Double.parseDouble(price.getText()) + 
                "', nomfam='" + famillycomb.getSelectedItem().toString() + "' ,quantity='" + Integer.parseInt(quantity.getText()) + "',buying_price='" + Double.parseDouble(Buying_price.getText()) + "',idproduct='" + Integer.parseInt(idproduct.getText()) + "' WHERE idProduct='" + idprod + "'");
        refresh();
        
        }
        }
        catch(Exception e)
        {
        
        JOptionPane.showMessageDialog(null, "erroo"+e.getLocalizedMessage());
        }
    }//GEN-LAST:event_EDITActionPerformed

    private void SearchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchingActionPerformed
        // TODO add your handling code here:
        try{
            vider();
           rs =  stt.executeQuery("SELECT * FROM product WHERE idProduct = '" + tsearch.getText() + "' OR nom_pro = '"+ tsearch.getText() + "'");
           while(rs.next()){
                ct.addRow(new Object [] {rs.getInt("idProduct"),rs.getString("nom_pro"),rs.getString("nomfam"),rs.getInt("quantity")
                        ,rs.getDouble("price_pro"),rs.getDouble("buying_price")});
                
           }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "erroo"+e.getLocalizedMessage());
        }
    }//GEN-LAST:event_SearchingActionPerformed

    private void tsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tsearchActionPerformed
        // TODO add your handling code here:
        try{
            if(tsearch.getText().equals("")){
            refresh();
        }else{
            vider();
           rs =  stt.executeQuery("SELECT * FROM product WHERE idProduct = '" + tsearch.getText() + "' OR nom_pro = '"+ tsearch.getText() + "'");
           while(rs.next()){
                ct.addRow(new Object [] {rs.getInt("idProduct"),rs.getString("nom_pro"),rs.getString("nomfam"),rs.getInt("quantity")
                        ,rs.getDouble("price_pro")});
           }
         }
        }catch(Exception e){
            
        }
        if(tsearch.getText().equals("")){
            refresh();
        }
    }//GEN-LAST:event_tsearchActionPerformed

    private void ArchivingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArchivingActionPerformed
        // TODO add your handling code here:
             try
        {
        if(JOptionPane.showConfirmDialog(null, "Do you really want to archive that Prodcut ?", "DELET", JOptionPane.YES_NO_OPTION)==JOptionPane.OK_OPTION)
        {
        if(idproduct.getText().length() != 0){
        stt.executeUpdate("DELETE FROM product WHERE idProduct ='" +  Integer.parseInt(idproduct.getText()) + "'");
        refresh();
        
        }else{
            JOptionPane.showMessageDialog(null, "No ID");
        }
        }
        }
        catch(Exception e)
        {
        JOptionPane.showMessageDialog(null, "erroo"+e.getLocalizedMessage());
        }
    }//GEN-LAST:event_ArchivingActionPerformed
    public void vider(){
            int n = ct.getRowCount();
        for(int i=0;i<n;i++){
            ct.removeRow(0);
        }
     }  // to void the table
    public void refresh(){
        vider();
        try{
          stt = cnn.obtenirconnexion().createStatement();
            rs = stt.executeQuery("SELECT * FROM Product");
           while(rs.next()){
                ct.addRow(new Object [] {rs.getInt("idProduct"),rs.getString("nom_pro"),rs.getString("nomfam"),rs.getInt("quantity")
                        ,rs.getDouble("price_pro"),rs.getDouble("buying_price")});
                
           }
           
        idproduct.setText("");
        famillycomb.setSelectedIndex(0);
        price.setText("");
        nomproduct.setText("");
        quantity.setText("");
        tsearch.setText("");
        Buying_price.setText("");
        idproduct.setEnabled(false);
        }catch(Exception e){
            System.err.print(e);
        }
        ProductTable.setModel(ct);
    }
    public void deplace(int i){
    try{
    idproduct.setText(ct.getValueAt(i, 0).toString());
    nomproduct.setText(ct.getValueAt(i, 1).toString());
    famillycomb.setSelectedItem(ct.getValueAt(i, 2).toString()); 
    quantity.setText(ct.getValueAt(i, 3).toString());
    price.setText(ct.getValueAt(i, 4).toString());
    Buying_price.setText(ct.getValueAt(i, 5).toString());
    
    }catch(Exception e){
        JOptionPane.showMessageDialog(null, "erroo"+e.getLocalizedMessage());
    }
}
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADD;
    private javax.swing.JButton Archiving;
    private javax.swing.JTextField Buying_price;
    private javax.swing.JButton EDIT;
    private javax.swing.JTable ProductTable;
    private javax.swing.JButton Searching;
    private javax.swing.JComboBox<String> famillycomb;
    private javax.swing.JTextField idproduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomproduct;
    private javax.swing.JTextField price;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField tsearch;
    // End of variables declaration//GEN-END:variables
}
